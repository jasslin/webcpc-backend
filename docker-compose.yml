services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    # 開發時覆蓋 Dockerfile 的 CMD，使用 ts-node-dev 實現熱重載
    command: npm run dev
    ports:
      - "3000:3000"
    volumes:
      # 掛載原始碼以實現熱重載，node_modules 使用命名磁碟區以提高效能
      - ./src:/app/src
      - ./migrations:/app/migrations
      - ./package.json:/app/package.json
      - ./tsconfig.json:/app/tsconfig.json
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - NODE_ENV=development
    depends_on:
      - db

  db:
    image: timescale/timescaledb-ha:pg15-latest
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      # 將 DB 端口暴露給主機，方便使用外部工具連接
      - "5433:5432"

  adminer:
    image: adminer
    ports:
      - "8080:8080"
    depends_on:
      - db

volumes:
  postgres_data:
